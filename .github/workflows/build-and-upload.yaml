name: Build and upload images

on:
  # Allow manually triggering workflow
  workflow_dispatch:
  schedule:
    # First day of every month, you know, for automatic updates etc.
    - cron: "0 0 1 * *"
  push:
    branches:
      - main

env:
  DOCKER_BUILDKIT: 1
  DIBBER_VERSION: 1.1.11
  DIBBER_PARALLEL_BUILDS: 8

# Cancel previous builds if a new one is triggered
concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

jobs:

  #
  # AMD64 builds
  #

  build_and_upload_amd64:
    name: Build AMD64
    env:
      ARCH: amd64

    runs-on: ubuntu-24.04
    # If you want to run on a custom runner to make this faster you need to create one here
    # https://github.com/organizations/<orgname>/settings/actions/runners
    # runs-on: faster-amd64

    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - name: Log in to the Container registry
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a  # v2.1.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Set up Python
        uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # v6
        with:
          python-version: "3.13"

      - name: Install Dibber
        run: pip install dibber==$DIBBER_VERSION

      - name: Setup buildx builder
        run: |
          docker buildx create --use --bootstrap --name dibber-builder --driver docker-container --driver-opt network=host

      - name: Build images
        run: dibber build --parallel $DIBBER_PARALLEL_BUILDS

      - uses: actions/upload-artifact@330a01c490aca151604b8cf639adc76d48f6c5d4  # v5.0.0
        with:
          name: dibber_manifest_data_amd64
          path: "*.txt"

      - uses: actions/upload-artifact@330a01c490aca151604b8cf639adc76d48f6c5d4  # v5.0.0
        with:
          name: logs_amd64
          path: logs
          retention-days: 14

  #
  # ARM64 builds
  #

  build_and_upload_arm64:
    name: Build ARM64
    env:
      ARCH: arm64

    runs-on: ubuntu-24.04-arm
    # If you want to run on a custom runner to make this faster you need to create one here
    # https://github.com/organizations/<orgname>/settings/actions/runners
    # runs-on: faster-arm64

    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - name: Log in to the Container registry
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a  # v2.1.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Set up Python
        uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # v6
        with:
          python-version: "3.13"

      - name: Install Dibber
        run: pip install dibber==$DIBBER_VERSION

      - name: Setup buildx builder
        run: |
          docker buildx create --use --bootstrap --name dibber-builder --driver docker-container --driver-opt network=host

      - name: Build images
        run: dibber build --parallel $DIBBER_PARALLEL_BUILDS

      - uses: actions/upload-artifact@330a01c490aca151604b8cf639adc76d48f6c5d4  # v5.0.0
        with:
          name: dibber_manifest_data_arm64
          path: "*.txt"

      - uses: actions/upload-artifact@330a01c490aca151604b8cf639adc76d48f6c5d4  # v5.0.0
        with:
          name: logs_arm64
          path: logs
          retention-days: 14

  merge_manifests:
    needs: [build_and_upload_amd64, build_and_upload_arm64]
    name: Merge manifests
    runs-on: ubuntu-24.04
    # If you want to run on a custom runner to make this faster you need to create one here
    # https://github.com/organizations/<orgname>/settings/actions/runners
    # runs-on: faster-arm64

    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - name: Log in to the Container registry
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a  # v2.1.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Set up Python
        uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # v6
        with:
          python-version: "3.13"

      - name: Install Dibber
        run: pip install dibber==$DIBBER_VERSION

      - uses: actions/download-artifact@018cc2cf5baa6db3ef3c5f8a56943fffe632ef53  # v6.0.0
        with:
          name: dibber_manifest_data_amd64
          path: amd64

      - uses: actions/download-artifact@018cc2cf5baa6db3ef3c5f8a56943fffe632ef53  # v6.0.0
        with:
          name: dibber_manifest_data_arm64
          path: arm64

      - name: Merge manifests
        run: |
          # Append AMD64 files to temp files
          cat amd64/manifest_data.txt >> tmp_manifest_data.txt
          echo "" >> tmp_manifest_data.txt

          cat amd64/uniq_ids.txt >> tmp_uniq_ids.txt
          echo "" >> tmp_uniq_ids.txt

          # Append ARM64 files to temp files
          cat arm64/manifest_data.txt >> tmp_manifest_data.txt
          echo "" >> tmp_manifest_data.txt

          cat arm64/uniq_ids.txt >> tmp_uniq_ids.txt
          echo "" >> tmp_uniq_ids.txt

          # Sort + filter to target files
          cat tmp_manifest_data.txt | sort -u | grep -v '^[[:space:]]*$' > manifest_data.txt
          cat tmp_uniq_ids.txt | sort -u | grep -v '^[[:space:]]*$' > uniq_ids.txt
          
          echo
          echo "---- Manifest data ----"
          cat manifest_data.txt
          
          echo
          echo "---- Unique IDs ----"
          cat uniq_ids.txt
          
          echo
          echo
          
          # Run merge
          dibber merge-manifests
